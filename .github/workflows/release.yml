on:
  push:
    # Sequence of patterns matched against refs/tags
    branches: 
    - master
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.2
      with:
        versionSpec: '5.2.x'
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
    - name: Build with dotnet
      run: dotnet build --configuration Release -p:Version=${{ steps.gitversion.outputs.nuGetVersionV2 }}
    - name: Test with dotnet
      run: dotnet test --configuration Release --no-build
    - uses: actions/upload-artifact@v2
      with:
        name: nuget
        path: "**/Kontent.Wyam*.nupkg"
    outputs: 
      nugetversion: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      prerelease: ${{ steps.gitversion.outputs.preReleaseTag != '' }}

  publish:
    needs: build
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: nuget

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: ${{ needs.build.outputs.prerelease }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./nuget.zip
          asset_name: nuget-${{ needs.build.outputs.nugetversion }}.zip
          asset_content_type: application/zip